define("metaserver/static/js/abuse/funcaptcha_modal",["require","exports","tslib","react","metaserver/static/js/deprecated_ajax/ajax_jquery","classnames","metaserver/static/js/flux/base_store","metaserver/static/js/flux/dispatcher","metaserver/static/js/flux/store_listener","metaserver/static/js/modules/constants/env","metaserver/static/js/modules/constants/login_and_register","metaserver/static/js/core/browser_detection","metaserver/static/js/core/uri","react-dom","metaserver/static/js/core/dom","metaserver/static/js/metrics/index","metaserver/static/js/core/exception","metaserver/static/js/components/ui/css"],(function(e,t,s,a,r,o,n,i,c,d,p,u,l,h,m,_,f,C){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.recordFunCaptchaLoadingStats=t.openFuncaptchaModal=t.loadFuncaptchaModal=void 0,a=s.__importDefault(a),r=s.__importStar(r),o=s.__importDefault(o),p=s.__importStar(p),u=s.__importStar(u),h=s.__importStar(h),m=s.__importStar(m),f=s.__importStar(f);const S=(e,t)=>{i.Dispatcher.dispatch({type:e,data:t})},g=(e,t,s,a)=>{r.BackgroundRequest({url:"/log_invisible_recaptcha_event",data:{event:e,email:t,source:s,captcha_session_token:a}})};t.loadFuncaptchaModal=()=>{const e=new v,t=(0,c.listenToStores)(F,{fs:e},()=>({show:e.show,email:e.email,firstTime:e.firstTime,onSuccess:e.onSuccess,onReady:e.onReady,runningFuncaptcha:e.runningFuncaptcha,source:e.source})),s=document.createElement("div");document.body.insertBefore(s,document.body.firstChild||null),h.render(a.default.createElement(t,null),s)};t.openFuncaptchaModal=(e,t,s,a)=>{g("FUNCAPTCHA_START",e,t,""),S("FUNCAPTCHA_START",{email:e,source:t,onSuccess:s,onReady:a})};t.recordFunCaptchaLoadingStats=(e,t,s,a)=>{(0,_.getMetricsReporter)().createStats({ns:"abuse",name:`funcaptcha/${e}`},{is_success:String(s)}).record(t),s||null==a||f.reportException({err:new Error(a),severity:f.SEVERITY.CRITICAL,tags:["content-abuse","funcaptcha"]})};class v extends n.Store{constructor(){super(...arguments),this.show=!1,this.email="",this.runningFuncaptcha=!1,this.firstTime=!0,this.source=""}_new_payload(e){if(e&&e.action&&e.action.type)switch(e.action.type){case"FUNCAPTCHA_START":{this.runningFuncaptcha=!0,this.firstTime=!1;const t=e.action.data;this.email=t.email,this.onSuccess=t.onSuccess,this.onReady=t.onReady,this.source=t.source,this.emit_change();break}case"FUNCAPTCHA_OPEN_MODAL":this.show=!0,this.emit_change();break;case"FUNCAPTCHA_FINISH":this.show=!1,this.runningFuncaptcha=!1,this.onSuccess=void 0,this.onReady=void 0,this.emit_change()}}}class A extends a.default.Component{getIFrame(){return h.findDOMNode(this.refs.iframe)}componentDidMount(){window.addEventListener("message",e=>{var s,a;if(e.data&&"funcaptcha-component"===e.data.origin&&l.URI.parse(e.origin).getAuthority()===d.FUNCAPTCHA_SERVER)if("invoked"===e.data.event)this.props.onReady&&this.props.onReady();else if("loaded"===e.data.event)g("FUNCAPTCHA_CHALLENGE_SHOWN",this.props.email,this.props.source,e.data.fc_token||""),S("FUNCAPTCHA_OPEN_MODAL");else if("played"===e.data.event){const t=this.props.show?"FUNCAPTCHA_SOLVED":"FUNCAPTCHA_SUCCESS";g(t,this.props.email,this.props.source,e.data.fc_token||""),null===(a=(s=this.props).onSuccess)||void 0===a||a.call(s,e.data.fc_token),S("FUNCAPTCHA_FINISH")}else"executed"===e.data.event&&(0,t.recordFunCaptchaLoadingStats)("funcaptcha_api_loading",e.data.latency,e.data.is_success,e.data.err_msg)})}componentWillReceiveProps(e){if(!this.props.runningFuncaptcha&&e.runningFuncaptcha){const t=this.props.firstTime?"load":"play",s=e.source;let a;a="LOGIN"===s?p.FUNCAPTCHA_PUBLIC_KEY:"BUY_PURCHASE_FORM"===s?p.FUNCAPTCHA_PAYMENT_PUBLIC_KEY:p.FUNCAPTCHA_REGISTER_PUBLIC_KEY;const r="funcaptcha-component";this.getIFrame().contentWindow.postMessage({event:t,origin:r,public_key:a,source:s},"*")}}componentDidUpdate(e,t){!e.show&&this.props.show?m.scroll_lock_document():e.show&&!this.props.show&&m.scroll_unlock_document()}render(){const e=new l.URI({scheme:"https",authority:d.FUNCAPTCHA_SERVER,query:{fc_nosuppress:l.URI.parse(window.location.href).getQuery().fc_nosuppress}}).toString(),t=a.default.createElement("iframe",{frameBorder:0,height:"100%",width:"100%",sandbox:"allow-scripts allow-same-origin allow-forms",className:"funcaptcha-frame",src:e,ref:"iframe",key:"iframe-id"});return a.default.createElement("div",{className:(0,o.default)({"funcaptcha-modal--hidden-firefox":!this.props.show&&u.mozilla,"funcaptcha-modal--hidden-non-firefox":!this.props.show&&!u.mozilla,"funcaptcha-modal":!0})},a.default.createElement("div",{className:"funcaptcha-div"},t))}}A.displayName="FuncaptchaComponent";const F=(0,C.requireCssWithComponent)(A,["/static/metaserver/static/css/abuse/funcaptcha_modal-vfl6bl9tt.css"])})),define("metaserver/static/js/flux/store_listener",["require","exports","tslib","react"],(function(e,t,s,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.listenToStores=void 0,a=s.__importDefault(a);t.listenToStores=function(e,t,s){return class extends a.default.Component{constructor(r){super(r),this.displayName=`StoreListener(${null!=e.displayName?e.displayName:"Unknown"})`,this.wrapped=a.default.createRef(),this.getWrappedComponent=()=>this.wrapped.current,this.getStores=()=>t,this._handleStoreChanged=()=>{const e=s(this.props,t);return this.setState({childProps:e})},this.state={childProps:s(r,t)}}componentDidMount(){for(const e of Object.keys(t)){t[e].add_change_listener(this._handleStoreChanged)}return this.setState({childProps:s(this.props,t)})}componentWillUnmount(){for(const e of Object.keys(t)){t[e].remove_change_listener(this._handleStoreChanged)}}render(){return a.default.createElement(e,Object.assign({ref:this.wrapped},this.state.childProps),this.props.children)}}}}));
//# sourceMappingURL=pkg-flux-listeners.min.js-vfloOwsRn.map